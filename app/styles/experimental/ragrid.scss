// See https://argyleink.github.io/ragrid how use this
// This version has some changes in order attribute. Use "reverse" instead order="reverse"
// Attribute names more shorter

[visibility~="none"] {
  display: none;
}

[visibility~="hidden"] {
  visibility: hidden;
}

[visibility~="collapse"] {
  visibility: collapse;
}

[visibility~="visible"] {
  visibility: visible;
}

[grid] {
  display: flex;
  flex-wrap: wrap;

  // https://developer.mozilla.org/en-US/docs/Web/CSS/contain
  contain: layout;

  flex-direction: row;

  &[reverse] {
    flex-direction: row-reverse;
  }

  /*
  ALIGN
    - Horizontal: Left, Center, Right
    - Vertical: Top, Center, Bottom
  */
  &[horizontal-align~="left"] {
    justify-content: flex-start;
  }
  &[horizontal-align~="center"] {
    justify-content: center;
  }
  &[horizontal-align~="right"] {
    justify-content: flex-end;
  }
  &[vertical-align~="top"] {
    align-items: flex-start;
  }
  &[vertical-align~="center"] {
    align-items: center;
  }
  &[vertical-align~="bottom"] {
    align-items: flex-end;
  }
  &[vertical-align~="baseline"] {
    align-items: baseline;
  }

  /*
  DISTRIBUTE
    - Horizontal: Left, Center, Right
    - Vertical: Top, Center, Bottom
  */
  &[horizontal-distribute~="around"] {
    justify-content: space-around;
  }
  &[horizontal-distribute~="between"] {
    justify-content: space-between;
  }
  &[horizontal-distribute~="equal"] {
    > * {
      flex-grow: 1;
    }
  }
  &[vertical-distribute~="around"] {
    align-content: space-around;
  }
  &[vertical-distribute~="between"] {
    align-content: space-between;
  }
  &[vertical-distribute~="equal"] {
    align-items: stretch;
  }

  /*
  SIZE
    - Instead of col-xs-12 or whatever
    - Specify size on the parent
  */
  &[columns~="1"] > * {
    flex-basis: 100%;
  }
  &[columns~="2"] > * {
    flex-basis: (100% / 2);
  }
  &[columns~="3"] > * {
    flex-basis: (100% / 3);
  }
  &[columns~="4"] > * {
    flex-basis: (100% / 4);
  }
  &[columns~="5"] > * {
    flex-basis: (100% / 5);
  }
  &[columns~="6"] > * {
    flex-basis: (100% / 6);
  }
  &[columns~="7"] > * {
    flex-basis: (100% / 7);
  }
  &[columns~="8"] > * {
    flex-basis: (100% / 8);
  }
  &[columns~="9"] > * {
    flex-basis: (100% / 9);
  }
  &[columns~="10"] > * {
    flex-basis: (100% / 10);
  }
  &[columns~="11"] > * {
    flex-basis: (100% / 11);
  }
  &[columns~="12"] > * {
    flex-basis: (100% / 12);
  }
}

// column specific
[grid~="columns"] {
  &[vertical-distribute~="equal"] {
    align-items: stretch;
    > * {
      height: auto;
    }
  }
}

// row specific
[grid~="rows"] {
  flex-direction: column;
  align-items: flex-start;

  &[reverse] {
    flex-direction: column-reverse;
  }
  &[horizontal-align~="center"] {
    align-items: center;
  }
  &[horizontal-align~="right"] {
    align-items: flex-end;
  }

  &[vertical-distribute~="around"] {
    justify-content: space-around;
  }
  &[vertical-distribute~="between"] {
    justify-content: space-between;
  }
  &[vertical-distribute~="equal"] {
    > * {
      width: initial;
    }
  }
}

[grid~="masonry"] {
  flex-flow: column wrap;
  height: 30rem;

  &[vertical-align~="center"] {
    align-content: center;
  }
}
